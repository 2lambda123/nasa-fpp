// ======================================================================
// \title  PassiveGetPortsOnlyTesterBase.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for PassiveGetPortsOnly component test harness base class
// ======================================================================

#ifndef PassiveGetPortsOnlyTesterBase_HPP
#define PassiveGetPortsOnlyTesterBase_HPP

#include <cstdio>

#include "Fw/Comp/PassiveComponentBase.hpp"
#include "Fw/Port/InputSerializePort.hpp"
#include "Fw/Types/Assert.hpp"
#include "test-base/PassiveGetPortsOnlyComponentAc.hpp"

//! \class PassiveGetPortsOnlyTesterBase
//! \brief Auto-generated base for PassiveGetPortsOnly component test harness
class PassiveGetPortsOnlyTesterBase :
  public Fw::PassiveComponentBase
{

  public:

    // ----------------------------------------------------------------------
    // Component initialization
    // ----------------------------------------------------------------------

    //! Initialize object PassiveGetPortsOnlyTesterBase
    virtual void init(
        NATIVE_INT_TYPE instance = 0 //!< The instance number
    );

  public:

    // ----------------------------------------------------------------------
    // Getters for from ports
    // ----------------------------------------------------------------------

    //! Get from port at index
    //!
    //! \return from_productGetOut[portNum]
    Fw::InputDpGetPort* get_from_productGetOut(
        NATIVE_INT_TYPE portNum //!< The port number
    );

    //! Get from port at index
    //!
    //! \return from_productSendOut[portNum]
    Fw::InputDpSendPort* get_from_productSendOut(
        NATIVE_INT_TYPE portNum //!< The port number
    );

  protected:

    // ----------------------------------------------------------------------
    // Component construction and destruction
    // ----------------------------------------------------------------------

    //! Construct object PassiveGetPortsOnlyTesterBase
    PassiveGetPortsOnlyTesterBase(
        const char* const compName, //!< The component name
        const U32 maxHistorySize //!< The maximum size of each history
    );

    //! Destroy object PassiveGetPortsOnlyTesterBase
    virtual ~PassiveGetPortsOnlyTesterBase();

  protected:

    // ----------------------------------------------------------------------
    // Getters for port counts
    // ----------------------------------------------------------------------

    //! Get the number of from_productGetOut ports
    //!
    //! \return The number of from_productGetOut ports
    NATIVE_INT_TYPE getNum_from_productGetOut() const;

    //! Get the number of from_productSendOut ports
    //!
    //! \return The number of from_productSendOut ports
    NATIVE_INT_TYPE getNum_from_productSendOut() const;

  private:

    // ----------------------------------------------------------------------
    // From ports
    // ----------------------------------------------------------------------

    //! From port connected to productGetOut
    Fw::InputDpGetPort m_from_productGetOut[1];

    //! From port connected to productSendOut
    Fw::InputDpSendPort m_from_productSendOut[1];

};

#endif
