#!/bin/sh -e

# ----------------------------------------------------------------------
# FPP release builder
# ----------------------------------------------------------------------
# To use this script, you must first install GraalVM and native-image.
# See README.adoc.
# ----------------------------------------------------------------------

directory=`dirname $0`
native_bin="$directory/native-fpp-`uname`-`uname -m`"
native_image=`which native-image || exit 0`
java_path=`which java || exit 0`

# Looking for native-image
if [ ! -x "$native_image" ]
then
    echo "release: native-image not found" 1>&2
    echo "  Install Graal VM; then install native-image." 1>&2
    echo "  Put Graal VM java and native-image first in your PATH." 1>&2
    exit 1
fi
java_dir=`dirname "$java_path"`
native_dir=`dirname "$native_image"`

if [ "$java_dir" != "$native_dir" ]
then
    echo "release: Found java and native-image in different directory paths. These paths must match:" 1>&2
    echo "  java path: $java_dir" 1>&2
    echo "  native-image path: $native_dir" 1>&2
    exit 2
fi
mkdir -p "$native_bin"

# Install locally
$directory/install

for item in $directory/bin/*.jar
do
    image_name=`basename $item`
    image_name=`echo $image_name | cut -f 1 -d '.'`
    output="$native_bin/$image_name"
    echo "Building $output"
    native-image --no-fallback --install-exit-handlers -jar "$item" "$output"
    if [ $? -ne 0 ]
    then
        echo "release: Failed to build $output"
        exit 1
    fi
done
rm "$native_bin"/*.txt
release_tgz="$native_bin.tar.gz"
tar -czf "$release_tgz" "$native_bin"
echo "Release archive built at $release_tgz"
